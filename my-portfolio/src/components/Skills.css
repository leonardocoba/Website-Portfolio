.skills-container {
  text-align: center;
  padding-top: 15vh;
  min-height: 50vh;
  width: 100%;
}

.skills-row {
  display: flex;
  justify-content: space-between;
  max-width: 1200px;
  margin: 20px auto;
}

.skill-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  flex: 1;
  min-width: 0;
  opacity: 0; /* Start with items invisible */
}

.skill-content img {
  width: 85px;
  height: 85px;
  margin-bottom: 10px;
  margin: 0 auto 10px;
  display: block;
}

.skill-content {
  transition: transform 0.5s ease;
}

.skill-content:hover {
  transform: scale(1.1);
}

.skill-item.in-view {
  animation: moveUp 0.5s ease forwards; /* Use 'forwards' to maintain the final state */
}

@keyframes moveUp {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }
  20% {
    opacity: 0.6;
    transform: translateY(-10px);
  }
  40% {
    opacity: 0.8;
    transform: translateY(5px);
  }
  60% {
    opacity: 1;
    transform: translateY(-5px);
  }
  80% {
    transform: translateY(2px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
@media (max-width: 500px) {
  .skills-container {
    /* Assuming you want to center the container and adjust its position like the .home element */
    left: 10%;
  }

  .skill-item.in-view {
    width: calc(85px - (500px - 100vw) * 0.9%);
    height: calc(85px - (500px - 100vw) * 0.9%);
  }

  .skill-content img {
    /* Decrease the size of skill images by 1% for every 10px below 500px */
    width: calc(85px - (500px - 100vw) * 0.9%);
    height: calc(85px - (500px - 100vw) * 0.9%);
  }

  /* Adjust the scale of the hover effect based on the viewport width */
  .skill-content:hover {
    transform: scale(calc(1 - (500px - 100vw) * 0.005));
  }
}
